@page "/Account/RegisterConfirmation"

@using System.Text
@using Justpharm.Web.Services.Email
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Justpharm.Web.Data
@using log4net

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register confirmation</PageTitle>

<div class="container">
    <h3>Confirmación del correo</h3>

    <StatusMessage Message="@statusMessage" />

    @if (emailConfirmationLink is not null)
    {
@*         <p>
            <a href="@emailConfirmationLink">Pulsa aquí para confirmar tu email</a>
        </p> *@
        <p>Revise su bandeja de entrada en el correo que ha proporcionado</p>
    }
    else
    {
        <p>Por favor revise su correo para confirmar su cuenta.</p>
    }
</div>
@inject ILog Log
@inject IConfiguration Configuration
@code {
    private string? emailConfirmationLink;
    private string? statusMessage;
    private EmailSender email { get; set; }
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        email = new EmailSender(Log, Configuration);
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error: no se ha encontrado el usuario con el correo especificado";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            email.EmailSend(user.Email, "Confirmación de correo", "Por favor, confirme su correo pulsando en el siguiente enlace: " + Configuration["Justpharm:Host"] + "/Account/ConfirmEmail?UserId=" + user.Id + "&Code=" + WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(await UserManager.GenerateEmailConfirmationTokenAsync(user))));
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
