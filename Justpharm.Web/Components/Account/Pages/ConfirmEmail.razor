@page "/Account/ConfirmEmail"

@using System.Text
@using Justpharm.Web.Services.Email
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Justpharm.Web.Data
@using log4net

@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager


<PageTitle>Confimación de email</PageTitle>
<div class="container">
    <StatusMessage Message="@statusMessage" />
    <a href="/login" >Iniciar sesión con su nueva cuenta</a>
</div>

@inject ILog Log
@inject IConfiguration Configuration
@code {
    private string? statusMessage;
    private bool success { get; set; }
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    private EmailSender email { get; set; }
    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        email = new EmailSender(Log, Configuration);

        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = $"Error loading user with ID {UserId}";
        }
        else
        {
            
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);
            statusMessage = result.Succeeded ? "Correo confirmado correctamente." : "Se ha producido un error intentando confirmar su correo.";
        }
    }
}
